pkgbuild_version=5
pkgname=bash
pkgver=5.0

overwrite=(
	'/usr/bin/bash'
)
dependencies=(
    "!$pkgname"
	'readline'
	'glibc'
)
sources=(
	"http://ftp.gnu.org/gnu/${pkgname}/${pkgname}-${pkgver}.tar.gz"
)

sha1sums=(
)

lfs_me_prepare() {
	tar -xf "${sources_dir}/${pkgname}-${pkgver}.tar.gz" -C "$build_dir"

	cd "${build_dir}/${pkgname}-${pkgver}"

	./configure --prefix=/usr                    \
	--docdir="/usr/share/doc/${pkgname}-${pkgver}" \
	--without-bash-malloc            \
	--with-installed-readline
}

lfs_me_build() {
	cd "${build_dir}/${pkgname}-${pkgver}"
	make
}

lfs_me_check() {
	cd "${build_dir}/${pkgname}-${pkgver}"
	if [[ $UID -eq 0 ]]
	then
		chown -Rv nobody .
		su nobody -s /bin/bash -c "PATH=$PATH make tests"
	else
		make tests
	fi	
}

lfs_me_install() {
	cd "${build_dir}/${pkgname}-${pkgver}"
	make DESTDIR="$fakeroot_dir" install

    	#don't overwrite info pages
    	rm "${fakeroot_dir}/usr/share/info/dir"
}

lfs_me_postinstall() {
    
    echo "Adding info pages"
    install-info  "/usr/share/info/${pkgname}.info" /usr/share/info/dir
}

lfs_me_preremove() {
    echo "Remove info pages"
    install-info  --delete "/usr/share/info/${pkgname}.info" /usr/share/info/dir
}

# vim:set syntax=sh et:

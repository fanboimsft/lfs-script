pkgbuild_version=5
pkgname=glibc
pkgver=2.30
gccver=9.2.0

_info_pages=(
	'libc.info'
	'libc.info-1'
	'libc.info-2'
	'libc.info-3'
	'libc.info-4'
	'libc.info-5'
	'libc.info-6'
	'libc.info-7'
	'libc.info-8'
	'libc.info-9'
	'libc.info-10'
	'libc.info-11'
	'libc.info-12'
	'libc.info-13'
	'libc.info-14'
)

backup=(
    '/etc/ld.so.conf'
    '/etc/nscd.conf'
    '/etc/nsswitch.conf'
)
dependencies=(
    "!$pkgname"
    'linux-headers'
)
sources=(
	"http://ftp.gnu.org/gnu/${pkgname}/${pkgname}-${pkgver}.tar.xz"
	"http://www.linuxfromscratch.org/patches/lfs/development/glibc-${pkgver}-fhs-1.patch"
)
sha1sums=(
)

lfs_me_prepare() {
	tar -xf "${sources_dir}/${pkgname}-${pkgver}.tar.xz" -C "$build_dir"

	cd "${build_dir}/${pkgname}-${pkgver}"

	patch -Np1 -i "${sources_dir}/${pkgname}-${pkgver}-fhs-1.patch"

	#kernel 5.2 fix
	sed -i '/asm.socket.h/a# include <linux/sockios.h>' \
	sysdeps/unix/sysv/linux/bits/socket.h

	#make compatibility symlink
	ln -sfv /tools/lib/gcc /usr/lib
	GCC_INDIR=/usr/lib/gcc/x86_64-pc-linux-gnu/${gccver}/include
	mkdir -v "../${pkgname}-build"
	cd "../${pkgname}-build"

	echo "slibdir=/usr/lib" >> configparms
  	echo "rtlddir=/usr/lib" >> configparms
  	echo "sbindir=/usr/bin" >> configparms
  	echo "rootsbindir=/usr/bin" >> configparms

	CC="gcc -isystem $GCC_INDIR -isystem /usr/include" \
	"../${pkgname}-${pkgver}/configure"	\
		--prefix=/usr			\
		--disable-werror		\
		--enable-kernel=3.2		\
		--enable-stack-protector=strong \
		--libdir=/usr/lib		\
		--libexecdir=/usr/lib		\
        libc_cv_slibdir=/lib

	unset GCC_INDIR
}

lfs_me_build() {
	cd "${build_dir}/${pkgname}-build"
	make

	cat > "${build_dir}/ld.so.conf" << "EOF"
# Begin /etc/ld.so.conf
/usr/local/lib
/opt/lib

# Add an include directory
include /etc/ld.so.conf.d/*.conf

EOF

cat > "${build_dir}/nsswitch.conf" << "EOF"
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

hosts: files dns myhostname
networks: files

services: files
protocols: files
ethers: files
rpc: files

# End /etc/nsswitch.conf
EOF
}

lfs_me_check() {
	cd "${build_dir}/${pkgname}-build"
	make check
}

lfs_me_install() {
	cd "${build_dir}/${pkgname}-build"
	make DESTDIR="$fakeroot_dir" install

	#config for nscd
	mkdir -pv "${fakeroot_dir}/etc"
	cp -v "../${pkgname}-${pkgver}/nscd/nscd.conf" "${fakeroot_dir}/etc/nscd.conf"
	mkdir -pv "${fakeroot_dir}/var/cache/nscd"

	#systemd files for nscd	
	mkdir -pv "${fakeroot_dir}/usr/lib/"{tmpfiles.d,systemd/system}
	install -v -Dm644 "../${pkgname}-${pkgver}/nscd/nscd.tmpfiles" "${fakeroot_dir}/usr/lib/tmpfiles.d/nscd.conf"
	install -v -Dm644 "../${pkgname}-${pkgver}/nscd/nscd.service" "${fakeroot_dir}/usr/lib/systemd/system/nscd.service"

	mkdir -pv "${fakeroot_dir}/usr/lib/locale"

	#install config files
	mkdir -pv "${fakeroot_dir}/etc"
	cp "$build_dir"/{nsswitch.conf,ld.so.conf} "${fakeroot_dir}/etc"
}

lfs_me_postinstall() {
	#create locales
#	localedef -i cs_CZ -f UTF-8 cs_CZ.UTF-8
#	localedef -i de_DE -f ISO-8859-1 de_DE
#	localedef -i de_DE@euro -f ISO-8859-15 de_DE@euro
#	localedef -i de_DE -f UTF-8 de_DE.UTF-8
#	localedef -i en_GB -f UTF-8 en_GB.UTF-8
#	localedef -i en_HK -f ISO-8859-1 en_HK
#	localedef -i en_PH -f ISO-8859-1 en_PH
	localedef -i en_US -f ISO-8859-1 en_US
	localedef -i en_US -f UTF-8 en_US.UTF-8
#	localedef -i es_MX -f ISO-8859-1 es_MX
#	localedef -i fa_IR -f UTF-8 fa_IR
#	localedef -i fr_FR -f ISO-8859-1 fr_FR
#	localedef -i fr_FR@euro -f ISO-8859-15 fr_FR@euro
#	localedef -i fr_FR -f UTF-8 fr_FR.UTF-8
#	localedef -i it_IT -f ISO-8859-1 it_IT
#	localedef -i it_IT -f UTF-8 it_IT.UTF-8
#	localedef -i ja_JP -f EUC-JP ja_JP
#	localedef -i ru_RU -f KOI8-R ru_RU.KOI8-R
#	localedef -i ru_RU -f UTF-8 ru_RU.UTF-8
#	localedef -i tr_TR -f UTF-8 tr_TR.UTF-8
#	localedef -i zh_CN -f GB18030 zh_CN.GB18030

    	echo "Adding info pages"
    	for info_page in ${_info_pages[@]}
    	do
        install-info "/usr/share/info/${info_page}" /usr/share/info/dir
    	done

    	echo "Creating compatibility symlink"
    	case $(uname -m) in
    	x86) ln -s /lib/ld-linux.so.2 /lib/ld-lsb.so.3
    	;;
    	x86_64) ln -s /lib/ld-linux-x86-64.so.2 /lib64/ld-lsb-x86-64.so.3
    	;;
	esac
}

lfs_me_preremove() {
	echo "Removing locales"
	rm -rf /usr/lib/locale/*

    	echo "Removing info pages"
    	for info_page in ${_info_pages[@]}
    	do
        install-info --delete "/usr/share/info/${info_page}" /usr/share/info/dir
    	done
}

# vim:set syntax=sh et:
